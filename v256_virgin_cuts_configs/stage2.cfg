
## ===================================================
## Configuration File - Fri May  4 13:45:22 2018
## ===================================================


# Specifies CFDTriggerChan vector filling algorithm. 
# Possible values are: -CFDTriggerCalc=NullFiller: Don't 
# fill vector.-CFDTriggerCalc=CFDTriggerFillerStd(default): 
# Fill fCFDTriggerChan vector branch with those channels 
# that reported their CFD as firing in an event. 
CFDTriggerCalc "CFDTriggerFillerStd"

# Specifies Cleanup algorithm to be used on images before 
# calculation of Hillas parameters: -CleanUpApp=Null: No 
# Cleanup performed. 
# -CleanUpApp=EventDisplayCleanUp:(default) Use 
# eventdisplays version of Cleaning up.Adds removeal of 
# isolated pixels. -CleanUpApp=Null: No Cleanup performed. 
# -CleanUpApp=CleanUpStd : Perform standard cleanup on 
# images.-CleanUpApp=DoubleIsolatedCleanUp : Remove clusters 
# of pixelswith less than three active 
# pixels-CleanUpApp=ClusterCleanUp : Remove all but that 
# cluster ofpixels with the largest 
# charge-CleanUpApp=TimeCleanUp : Use Charge and Time 
# information of pixelcoincidence with neighboring pixel 
# required (based on cluster 
# cleanup)-CleanUpApp=TimeCleanUp2 : Use Charge and Time 
# information of pixelcoincidence with neighboring pixel 
# required (based on ED cleanup) 
CleanUpApp "EventDisplayCleanUp"

# Significance level used to define Bright pixels. Default 
# value is 5.00 sigma. Used when -CleanUpApp=CleanUpStd 
# (default) is specified 
CUSA_Bright 5

# Significance level used to define Boundary pixels. Default 
# value is 2.5 sigma. Used when -CleanUpApp=CleanUpStd 
# (default) is specified 
CUSA_Boundary 2.5

# Fixel level (Digital Counts) used to define Bright pixels. 
# Default is to use pedvar significance (See CUSA_Bright) 
# Used when -CleanUpApp=CleanUpStd is specified 
CUSA_BrightFixed -1

# Fixel level (Digital Counts) used to define Boundary 
# pixels. Default is to use pedvar significance (See 
# CUSA_Boundary) Used when -CleanUpApp=CleanUpStd is 
# specified 
CUSZA_BoundaryFixed -1

# PedVar Significance level used to define Bright pixels. 
# Default value is 5.00 sigma. Used when 
# -CleanUpApp=ClusterCleanUp is specified 
CCU_Bright 5

# PedVar Significance level used to define Boundary pixels. 
# Default value is 2.5 sigma. Used when 
# -CleanUpApp=ClusterCleanUp is specified 
CCU_Boundary 2.5

# Fixel level (Digital Counts) used to define Bright pixels. 
# Default is to use pedvar significance (See CCU_Bright) 
# Used when -CleanUpApp=ClusterCleanUp is specified 
CCU_BrightFixed -1

# Fixel level (Digital Counts) used to define Boundary 
# pixels. Default is to use pedvar significance (See 
# CCU_Boundary) Used when -CleanUpApp=ClusterCleanUp is 
# specified 
CCU_BoundaryFixed -1

# Algorithm to determine whether an FADC crate stop jitter 
# has occurred - currently CrateTimingCorrectorSimple, 
# CrateTimingCorrectorFloatingRef, 
# CrateTimingCorrectorFlasher and CrateTimingCorrectorNULL 
# are available. Use NULL if you believe that there is a 
# problem with the L2 pulses. If using 
# CrateTimingCorrectorFlasher with a trivial gains file, 
# name it "simLaser.root" so the algorithm knows not to look 
# for anything in the calibration file. 
CTCF_Algorithm "CrateTimingCorrectorFlasher"

# Cut-off used to determine whether an FADC crate jitter has 
# occurred 
CTCS_CutOff 1.5

# Use this option to adjust the number of events to use when 
# getting the mean pulse. The full run is not used as this 
# would significantly extend the analysis time. 
DAAT_NumEvents 10000

# Use this option to adjust the number of events to use when 
# getting the mean pulse. The full run is not used as this 
# would significantly extend the analysis time. 
DAT_NumEvents 10000

# Use this option to adjust the number of events to use when 
# constructing the average L2 pulse 
DCL2P_NumEvents 10000

# Select the comma-separated list of algorithms to be used. 
# Available classes include DiagnosticsCheckL2Pulse, 
# DiagnosticsCalculateLowGainPedestals, 
# DiagnosticsEvaluateL1ThresholdPulse, 
# DiagnosticsCheckANLL2Pulse, DiagnosticsCheckClocks, 
# DiagnosticsFlagCount, DiagnosticsAverageTraces, 
# DiagnosticsRate, DiagnosticsAverageAllTraces 
D_Algorithm DiagnosticsAverageTraces

# Change the output pdf file (can use slashes - but 
# directory must exist) 
D_PDF "runNumber_diag.stageNumber.pdf"

# PedVar Significance level used to define Bright pixels. 
# Default value is 5.00 sigma. Used when 
# -CleanUpApp=DoubleIsolatedCleanUp is specified 
DICU_Bright 5

# PedVar Significance level used to define Boundary pixels. 
# Default value is 2.5 sigma. Used when 
# -CleanUpApp=DoubleIsolatedCleanUp is specified 
DICU_Boundary 2.5

# Fixel level (Digital Counts) used to define Bright pixels. 
# Default is to use pedvar significance (See CCU_Bright) 
# Used when -CleanUpApp=DoubleIsolatedCleanUp is specified 
DICU_BrightFixed -1

# Fixel level (Digital Counts) used to define Boundary 
# pixels. Default is to use pedvar significance (See 
# CCU_Boundary) Used when -CleanUpApp=DoubleIsolatedCleanUp 
# is specified 
DICU_BoundaryFixed -1

# PedVar Significance level used to define Bright pixels. 
# Default value is 5.00 sigma. Used when 
# -CleanUpApp=EventDisplayCleanUp is specified 
EDCU_Bright 5

# PedVar Significance level used to define Boundary pixels. 
# Default value is 2.5 sigma. Used when 
# -CleanUpApp=EventDisplayCleanUp is specified 
EDCU_Boundary 2.5

# Fixel level (Digital Counts) used to define Bright pixels. 
# Default is to use pedvar significance (See EDCU_Bright) 
# Used when -CleanUpApp=EventDisplayCleanUp is specified 
EDCU_BrightFixed -1

# Fixel level (Digital Counts) used to define Boundary 
# pixels. Default is to use pedvar significance (See 
# EDCU_Boundary) Used when -CleanUpApp=EventDisplayCleanUp 
# is specified 
EDCU_BoundaryFixed -1

# The is the seed for the random number generator (RNG). The 
# default seed is "0", which means that RNG are initialized 
# with random seeds (based on CPU time...). 
G_GlobalRandomSeed 0

# This is the global debug level. Possible values are 
# "E_NODEBUG", "E_INFO", "E_FULLDEBUG". The default value is 
# "E_NODEBUG", i.e. unless the user specify a higher debug 
# level for specific classes, there will be no debug 
# information produced. 
G_GlobalDebugLevel "E_NODEBUG"

# This is the global debug stream. The default value is 
# "std::cout". Any other value is interpreted as a filename, 
# and the debug information will be streamed to that file. 
G_GlobalDebugStream "std::cout"

# This is a list of classes with specific debug levels and 
# streams. If you want a class called "VASomeThing" to have 
# a debug level of "E_INFO" and stream the output to a file 
# named "myclassdebug.txt", the option should be 
# "VASomeThing/E_INFO/myclassdebug.txt". 
G_DebugOptions 

# False (or 0) for real data. True (or 1) for simulation. 
G_SimulationMode 0

# False (or 0) if we are to try patching events affected by 
# overflow. Default to True (or 1). 
G_DiscardOverflow 1

# Frequency at which information is printed for events. The 
# default value is set to 1000, i.e.,information is printed 
# every 1000 events. A value of 0 should be interpreted as 
# NO PRINTOUT. Any other non-negative value (XXXX) is 
# interpreted as: print every XXXX events. 
G_GlobalProgressPrintFrequency 10000

# Number of events to analyse. Default value is 0, which 
# means all events will be processed. Any other positive 
# integer is interpreted as an upper limit on the number of 
# events to be processed. 
G_NumEventsToAnalyse 0

# Start analysing at this event, skip all previous 
G_EventToStartFrom 0

# comma separated list of pointing offsets [degrees] in 
# camera X-plane. 1==T1, 2==T2, 3==T3, 4==T4. For example, 
# to put an arbitrary 0.05 degree mispointing on T1 and a 
# 0.1 degree mispointing on T2 do: 
# -G_PointingOffsetX=1/0.05,2/0.1 
G_PointingOffsetX 

# comma separated list of pointing offsets [degrees] in 
# camera X-plane. 1==T1, 2==T2, 3==T3, 4==T4. For example, 
# to put an arbitrary 0.1 degree mispointing on T1 and a 
# 0.05 degree mispointing on T2 do: 
# -G_PointingOffsetY=1/0.1,2/0.05 
G_PointingOffsetY 

# Use this option to set a GPS clock to be bad. For the 
# Telescope GPS clocks, the format is 1==T1, 2==T2, 3==T3, 
# 4==T4. Thus to set the GPS clocks for T1 and T3 do 
# -G_BadGPSClocks=1/true, 3/true. You can also set the L3 
# array trigger GPS clock to be bad. In this case, we the 
# index 0 to represet L3. Thus to set the L3, T1 and T3 GPS 
# clocks to be bad, do -G_BadGPSClocks=0/true, 1/true, 
# 3/true. The order is not important. Generally if you are 
# using this option in Stage1, you will need to use it in 
# stage 2 also. These settings will be saved to the run 
# header. 
G_BadGPSClocks 

# You can specify a source name here, e.g. Crab. If there 
# are no source co-ordinates in the run header, maybe 
# because the database was not contacted in stage 1, or you 
# are using simulations, then this can be used in 
# conjunction with VASourceList to get the source 
# co-ordinates for later stage analysis 
G_SourceName "undefined"

# Specifies single telescope 2D Hillas parameters 
# calculation algorithm. Possible values are: 
# -Hillas2DCalc=Null (default): Do not calculate 2D Hillas 
# parameters. -Hillas2DCalc=Hillas2DStd: Calculate single 
# telescope 2D Hillas parameters using standard Lessard 
# ellipticity method for 2D distance parameter calculation. 
Hillas2DCalc "Null"

# Elongation parameter (default= 1.5). Used when 
# -Hillas2DCalc=Hillas2DStd (default) chosen. Used in 
# Lessard distance calculation 
H2DPSC_Elongation 1.5

# Specifies Hillas parameters calculation algorithm. 
# Possible values are: -HillasCalc=Null: Do not calculate 
# Hillas parameters. -HillasCalc=HillasStd(default): 
# Calculate Hillas parameters using standard 
# (Hillas/Akerloft) method.-HillasCalc=HillasFirstPass: used 
# for doublepass method and should never be called during a 
# standard analysis. 
HillasCalc "HillasStd"

# Source Y value in camera plane (default=0.0). Hillas 
# orientation parameters (Alpha,Distance,Miss and Azwidth) 
# are calculated relative to this value and the HPEG_XOrigin 
# value. 
HPEG2D_YOrigin 0

# Specifies algorithm method to fit to image. Possible 
# values are: -HillasFitAlgorithm=Null(default):Do not 
# calculate a fit.-HillasFitAlgorithm=2DEllipticalGaussian: 
# Fit an elliptical Gaussian function to the image to 
# determine fit hillas 
# parameters.-HillasFitAlgorithm=EGMCusp: Fit a modified 
# elliptical Gaussian with a cusp 
HillasFitAlgorithm "Null"

# Source Y value in camera plane (default=0.0). Hillas 
# orientation parameters (Alpha,Distance,Miss and Azwidth) 
# are calculated relative to this value and the HPEG_XOrigin 
# value. 
HPEGMCusp_YOrigin 0

# Source X value in camera plane (default=0.0). Hillas 
# orientation parameters (Alpha,Distance,Miss and Azwidth) 
# are calculated relative to this value and the HPSC_XOrigin 
# value. 
HPSC_XOrigin 0

# Source Y value in camera plane (default=0.0). Hillas 
# orientation parameters (Alpha,Distance,Miss and Azwidth) 
# are calculated relative to this value and the HPSC_YOrigin 
# value. 
HPSC_YOrigin 0

# Multiplies the post-cleaning charge values by an offset 
# factor (useful for throughput systematics studies) 
HPSC_ChargeCorrection 1

# Select the ImageTimingParam Algorithm. The default 
# algorithm does nothing 
ITP_Algorithm "ImageTimingParamNull"

# This is the default interpolator that calculates the 
# pointing position (RA, Dec, Az, El) of the the telescopes. 
# The default interpolator is "LINEAR", which means that a 
# simple linear interpolation is used to calculate the 
# pointing position. This is what should be used if tracking 
# information is available from the database for this run. 
# Other options are "UseRADec", which should be used with 
# option flags "G_TrackingSourceRA" and 
# "G_TrackingSourceDec", and FILLFROMVBF and "nullptr". 
G_TrackingInterpolator "LINEAR"

# Select a comma-separated list of algorithms to be used for 
# calculating the deadtime. Available classes are 
# LiveTimeCalcVBFL3Scalar, LiveTimeCalcFromDeltaT, 
# LiveTimeCalcFromDB(this one not yet available) All classes 
# are currently developmental, please do not change the 
# default 
LTC_Algorithm LiveTimeCalcVBFL3Scalar,LiveTimeCalcFromDeltaT

# Select the algorithm you want to use for loading the low 
# gain data. The default is to use the LowGainDataLoadAuto 
# function which automatically finds the best data. 
# Alternatively you can specify your own file with 
# -LGDL_Algorithm=LowGainDataLoaderFromFile and 
# -LGDLFF_FileName=<string>. If you do not want to use a low 
# gain datafile, you can use LowGainDataLoaderNull (this 
# happens automatically for simulations) 
LGDL_Algorithm "LowGainDataLoaderAuto"

# Set the default value for the low gain ratio (default = 
# 6). This value is used when real values could not be 
# loaded from a file (if using LowGainDataLoaderFromFile). 
# The value set here is now also applied to all channels in 
# simulation mode! 
LGDL_LoGainRatio 6

# Set the default value for the low gain ratio for the time 
# period after the PMT upgrade (default = 5.8). 
LGDL_LoGainRatioPostUpgrade 5.8

# Set the default value for the low gain ratio for the time 
# period before the PMT upgrade (default = 6.0). 
LGDL_LoGainRatioPreUpgrade 6

# Select the file from which to load the low gain data. 
# Should be used in conjunction with 
# -LGDL_Algorithm=LowGainDataLoaderFromFile 
LGDLFF_FileName ""

# Select the MuonParam Algorithm. The default algorithm does 
# nothing 
MP_Algorithm "MuonParamNull"

# This option is used when the user wants to replace the 
# tracking parameters for specific telescopes. For example, 
# we know that the tracking parameters used for T3 during 
# the December 2006 dark run were not correct, but we know 
# what they should have been and therefore we can correct 
# them. Here is an example on how to use this option if 
# correcting the tracking parameters for T1 and T3: 
# -G_ReplaceTrackingParameters T1/file1.txt,T3/file3.txt 
G_ReplaceTrackingParameters 

# Padding file name. If input root file is an ON-source 
# file, this is usually the relevant OFF-source root file 
# and vice versa. Required when the -PaddingApp=PaddingStd 
# option is specified. If no -PaddingApp option is chosen 
# and this option is chosen, -PaddingApp=PaddingStd is 
# assumed 
PaddingFile ""

# Specifies padding algorithm. (Applied before application 
# of any image Cleanup application) Possible values are: 
# -PaddingApp=Null (default): No padding applied 
# -PaddingApp=PaddingStd: Apply Standard Padding 
# -PaddingApp=PaddingCustom: Apply user-specified Padding. 
# Selection of the -PaddingApp=PaddingStd option requires 
# that the -PaddingFile option be specified.Selection of the 
# -PaddingApp=PaddingCustom option requires that at least 
# one of the -P_ options be specified. 
PaddingApp "Null"

# File containing values to pad each channel's noise to. 
# Format is three columns: telescope (0-3), channel (0-499), 
# desired pedvar. If a channel's pedvar already exceeds the 
# desired value, no padding is done. To set padding pedvar 
# scaling factors for the entire array or individual 
# telescopes, see -P_PedvarScaling and 
# -P_MultiPedvarScaling. Pedvars for channels set in this 
# file override those options. Note that the padding is 
# applied to gain-adjusted pedvars. 
P_PedvarChannelList ""

# Scale factor for all pedvars in all telescopes, must be >= 
# 1.0. To set scaling factors for individual telescopes, use 
# -P_MultiPedvarScaling. This option is overridden by 
# -P_PedvarChannelList for channels assigned padded pedvars 
# > 0. 
P_PedvarScaling -1

# Comma-separated list of scale factors for all pedvars in 
# each telescope, must be >= 1.0. 1==T1, 2==T2, 3==T3, 
# 4==T4. For example, to set the scale factor to T1 to 1.1 
# and for T2 to 1.3, do -P_MultiPedvarScaling=1/1.1,2/1.3. 
# Channels set in the -P_PedvarChannelList take precedence. 
# This option overrides -P_PedvarScaling for each specified 
# telescope (if a telescope is not specified, then its 
# scaling factor defaults to the whatever value is given to 
# -P_PedvarScaling, or to 0 (no scaling) if that option is 
# not used). 
P_MultiPedvarScaling 1/-1,2/-1,3/-1,4/-1

# Place the PaddingFromLibrary file name here. This is the 
# output file from buildQStatsLibrary 
PFL_LibraryFileName ""

# Select the noise level here in grisu units - eg the Crab 
# with no moon is around 200 
PFL_NoiseLevel 250

# This is the window integration size, this should be the 
# same as the normal FADC window integration size 
PFL_Window 7

# Select the PixelSmoothing Algorithm. The default algorithm 
# applies no smoothing. Use PixelSmoothingSimple to apply 
# the simple approach (ie faulty pixels have their charge 
# set to the average of adjacent pixels) 
PS_Algorithm "PixelSmoothingNULL"

# PSDF_Algorithm key and its value given specifies the 
# source from which the PixelStatusData is filled. The 
# available algorithms are "VDB" and "Trivially" 
PSDF_Algorithm "VDB"

# Set observing mode to be one of On, Off, Wobble 
RHM_ObservingMode "undefined"

# If observing mode is off or wobble you can set the offset 
# in RA here in <units, value>, where units are 
# minutes/degrees/radians, e.g. 
# -fTrackingOffsetRA=minutes/-30 
RHM_TrackingOffsetRA 

# If observing mode is off or wobble you can set the offset 
# in Dec here in <units, value>, where units are 
# degrees/radians, e.g. -fTrackingOffsetRA=degrees/0.3 
RHM_TrackingOffsetDec 

# Set a source offset in camera co-ordinates. First element 
# is the offset distance, second element is the offset angle 
# with North corresponding to 0 degrees, East as 90 degrees, 
# South as 180 degrees and West as 270 degrees. Examples a 
# 0.3 degree wobble offset North is 
# -RHM_CameraOffsetDeg=0.3/0; a 0.4 degree wobble offset 
# South is 0.4/180; a 0.5 degree wobble offset East is 
# 0.5/90; or a 0.7 degree wobble offset is 0.7/270 
RHM_CameraOffsetDeg 

# Override the nominal live time - can be used if the live 
# time calculator fails. Ignore the default value. 
RHM_NominalLiveTime -10

# Override the cut live time - can be used if the live time 
# calculator fails. Ignore the default value. 
RHM_CutLiveTime -10

# Override the run info offset distance [degrees] 
RHM_RunInfoOffsetDistance -1

# This option is used only when option "UseRADec" is 
# invoked. This is the Dec of the source, e.g. for the Crab 
# 22d00m52s ONLY USE J2000 COORDINATES!!!! 
G_TrackingSourceDec "0d0m0s"

# This option is used only when option "UseRADec" is 
# invoked. This is the RA of the source, e.g. for the Crab 
# 05h34m31.9s ONLY USE J2000 COORDINATES!!!! 
G_TrackingSourceRA "0h0m0s"

# The simple analysis is the default case. 
S2_Algorithm "Stage2AnalysisSimple"

# Choose the mode for trace analysis. 
# -S2A_TraceManagerMode=partial corresponds to calculating 
# only the charges (faster). -S2A_TraceManagerMode=full 
# corresponds to calculating the timing information as well 
# as the charges (slower) 
S2A_TraceManagerMode "partial"

# Choose the size of the FADC integration window used for 
# the double pass method 
S2A_DoublePassWindowWidth 5

# Set to true to use pointing calculated from the VPM and 
# falseto use encoder pointing. Default is true. VPM quality 
# flag in DB is checked and automatically reverts to 
# encoders if bad. 
S2A_UseVPMPointing 1

# Select [true] to print the QStatsData time slices to the 
# screen (useful diagnostic option) 
Stage2_PrintTimeSlices 0

# Select [true] to run the stage 3 cleaning and 
# parameterisation code and write the ParameterisedEventTree 
Stage2_DoParameterisation 1

# Select [true] to write the calibrated events to the file 
Stage2_WriteCalibratedEvents 0

# Select a cleaning option for pixels included in the 
# Calibrated Event Tree. Options are NONE, ISLAND, RING1, 
# RING2, RING3, RING5, RING10, RING15 Default is NONE. 
Stage2_CalibratedEventCleaning "NONE"

# Disable Alignment of all Telescope directions in an event. 
# Default is to enable the Alignment so that all Telescope 
# directions in an event are all effectively pointing in the 
# same direction before determining the Hillas parameters. 
DisableTelAlignment 0

# Use the double pass method to integrate the FADC trace 
DoublePass 0

# Use the shower time gradient to optimize the integration 
# window; tzeros will be calculated regardless of whether 
# CalculateTZeros is set. Note that this will aproximately 
# double the analysis time. (This is the "doublepass" 
# method, we are not sure if the other algorithm in the code 
# by that name actually works or not) 
UseTimeProfile 1

# By default the charge to pedvar ratios (i.e. signal to 
# noise) are not written out. Set this to true to save them, 
# no need to specify any other algorithms. 
WriteSignalToNoise 0

# By default the trace tzeros are not calculated. Set this 
# to true to extract them from the trace 
CalculateTZeros 0

# If calculating tzeros, select the charge/pedvar ratio 
# required for a tzero to be extracted from a trace. 
ThresholdForTZero 2

# Set this flag to true to write the channel tzeros to the 
# parameterised event tree (CalculateTZeros must also be 
# turned on or the tzeros will all be 0). 
WriteTZeros 0

# By default the image timing parameters are not written 
# out. Set this to true to save them - you also need to 
# specify a VAImageTimingParam method 
WriteImageTimingData 0

# By default the muon parameters are not written out. Set 
# this to true to save them - you also need to specify a 
# -MP_Algorithm=MuonParamBasic method 
WriteMuonData 0

# Select [true] to read calibrated events from the file. In 
# order to do this, you should not specify a vbf file or a 
# laser file - you will need only a stage 2 output file. 
# Note that you will need to have run stage 2 with the 
# option -Stage2_WriteCalibratedEvents=true 
Stage2_ReadCalibratedEvents 0

# Select [true] to write a vector to the parameterised 
# events tree containing a list of low gain channels per 
# event 
WriteLowGainChannels 1

# Write histograms of fraction of charge contained by FADC 
# trace 
WriteChargeFraction 1

# PedVar Significance level used to define Bright pixels. 
# Default value is 5.00 sigma. Used when 
# -CleanUpApp=TimeCleanUp2 is specified 
TCU2_Bright 5

# PedVar Significance level used to define Boundary pixels. 
# Default value is 2.5 sigma. Used when 
# -CleanUpApp=TimeCleanUp2 is specified 
TCU2_Boundary 2.5

# Fixel level (Digital Counts) used to define Bright pixels. 
# Default is to use pedvar significance (See TCU2_Bright) 
# Used when -CleanUpApp=TimeCleanUp2 is specified 
TCU2_BrightFixed -1

# Fixel level (Digital Counts) used to define Boundary 
# pixels. Default is to use pedvar significance (See 
# TCU2_Boundary) Used when -CleanUpApp=TimeCleanUp2 is 
# specified 
TCU2_BoundaryFixed -1

# Time coincidence required between boundary pixel and 
# image. Default value is 2.6 ns (currently using delta in 
# T0 time). Used when -CleanUpApp=TimeCleanUp2 is specified 
TCU2_TimeSeparation 2.6

# PedVar Significance level used to define Boundary pixels. 
# Default value is 2.5 sigma. Used when 
# -CleanUpApp=TimeCleanUp is specified 
TCU_Boundary 2.5

# PedVar Significance level used to define Bright pixels. 
# Default value is 5.00 sigma. Used when 
# -CleanUpApp=TimeCleanUp is specified 
TCU_Bright 5

# Fixed Level (Digital Counts) used to define bright pixels. 
# Default value is 20.00 dc. Used when 
# -CleanUpApp=TimeCleanUp is specified 
TCU_BrightFixed -1

# Time coincidence required between bright pixels. Default 
# value is 3 ns. Used when -CleanUpApp=TimeCleanUp is 
# specified 
TCU_BrightClusterTime 3

# Fixed Level (Digital Counts) used to define boundary 
# pixels. Default value is 13.00 dc. Used when 
# -CleanUpApp=TimeCleanUp is specified 
TCU_BoundaryFixed -1

# Time coincidence required between boundary pixel and 
# image. Default value is 3 ns. Used when 
# -CleanUpApp=TimeCleanUp is specified 
TCU_BoundaryClusterTime 3

# Number of iterations to search for boundary pixels. 
# Default value is 3 times. Used when 
# -CleanUpApp=TimeCleanUp is specified 
TCU_BoundaryIterations 2

# Simple window is default. Under development are 
# TraceEvaluatorDynamicWindow, TraceEvaluatorTraceFit1, 
# TraceEvaluatorLinearInterpolation, 
# TraceEvaluatorMatchedFilter, 
# TraceEvaluatorDynamicWindowStartTime (this one should work 
# fine) 
TE_Algorithm "TraceEvaluatorSimpleWindow"

# Fraction of pulse height defining start of rise time 
# calculation [0-1] 
TE_RiseTimeBottom 0.1

# Fraction of pulse height defining end of rise time 
# calculation [0-1] 
TE_RiseTimeTop 0.9

# Fraction of pulse height defining end of fall time 
# calculation [0-1] 
TE_FallTimeBottom 0.1

# Fraction of pulse height defining start of fall time 
# calculation [0-1] 
TE_FallTimeTop 0.9

# Fraction of pulse height defining start of width 
# calculation [0-1] 
TE_WidthRising 0.5

# Fraction of pulse height defining end of width calculation 
# [0-1] 
TE_WidthFalling 0.5

# Integrate low gain traces to end of readout window (only 
# use with TraceEvaluatorDynamicWindowStartTime) 
TE_IntegrateFullLowGain 0

# User-specified cutoff for readout window (useful when only 
# interested in the first ~20 samples of a highlow run with 
# an expanded readout window). Default of 0 will use full 
# readout window. 
TE_WindowCutOff 0

# Select true to apply the charge ratios to the matched 
# filter. If charge ratios are being calculated, set this to 
# false 
TEMF_ApplyChargeRatio 1

# Pass in the data file for the matched filter 
TEMF_DataFile ""

# This is currently the only trace manager algorithm 
# available. Leave alone! 
TMan_Algorithm "TraceManagerSimple"

# Comma-separated list of TraceModifiers. 
# TraceModifierReSample, TraceModifierDeconvolution, 
# TraceModifierNull. Note that TraceModifierReSample 
# requires compilation with GSL - add -D_OAWG_GSL to the 
# compile flags in Makefile.common. You also need to add the 
# $(GSLLIB) to the line LIBS = ... 
TMod_TraceModifierList 

# Use this trace modifier - only default null case 
# available, leave alone 
TMod_Algorithm "TraceModifierNull"

# Fraction of zero padding to apply. The trace will be 
# resampled by this factor (eg if there is 24 samples, then 
# the trace will be resampled to a resolution of 
# ZeroPadFactor * 24 (uint32_t) 
TMRS_ZeroPaddingFactor 8

# Select trace noise algorithm. Currently only the null case 
# and real noise are available. The real noise feature is 
# under development (it is for use with sims). Leave alone 
TN_Algorithm "TraceNoiseNull"

# Select trace padder algorithm. Currently only the null is 
# available. Leave alone 
TP_Algorithm "TracePadderNull"

# Select the TraceChi Algorithm. The default algorithm does 
# nothing. TraceChi1 applies the standard method for 
# computing the trace chi 
TC_Algorithm "TraceChiNull"

# Picture Cleaning Threshold for the event chi method 
TC1_PictureThreshold 5

# Boundary Cleaning Threshold for the event chi method 
TC1_BoundaryThreshold 3

# Ideal Trace Length for the event chi method 
TC1_IdealTraceLength 8

# Select the TraceWindow Algorithm. The default algorithm 
# uses the TZero measurement to determine the window start. 
# If you prefer to set the window start yourself you can use 
# TraceWindowStatic, along withthe TWS_ options 
TW_Algorithm "TraceWindowTZero"

# This is where VATraceWindow gets the width of the low gain 
# fadc window tracefor all telescopes. The FADC window width 
# for individual telescopes can be set using 
# TW_MultiTelWindowWidth 
TW_LowGainWindowWidth 7

# This is where VATraceWindow gets the width of the high 
# gain fadc window tracefor all telescopes. The FADC window 
# width for individual telescopes can be set using 
# TW_MultiTelWindowWidth 
TW_HighGainWindowWidth 7

# Comma separated list of FADC integration window widths for 
# each telescope where1==T1, 2==T2, 3==T3, 4==T4. For 
# example, to set the width of the charge window for T1 to 8 
# and T2 to 9 do -TW_MultiTelLowGainWindowWidth=1/8,2/9. 
# This option overrides-TW_LowGainWindowWidth for each 
# specified telescope (if a telescope is not specified in 
# the comma separated list then its window width defaults to 
# whatever is given by TW_LowGainWindowWidth). 
TW_MultiTelLowGainWindowWidth 0/7,1/7,2/7,3/7

# Comma separated list of FADC integration window widths for 
# each telescope where1==T1, 2==T2, 3==T3, 4==T4. For 
# example, to set the width of the charge window for T1 to 8 
# and T2 to 9 do -TW_MultiTelHighGainWindowWidth=1/8,2/9. 
# This option overrides-TW_HighGainWindowWidth for each 
# specified telescope (if a telescope is not specified in 
# the comma separated list then its window width defaults to 
# whatever is given by TW_HighGainWindowWidth). 
TW_MultiTelHighGainWindowWidth 0/7,1/7,2/7,3/7

# This is where VATraceWindow gets the start of the low gain 
# fadc window tracefor all telescopes for the low gain 
# channel. The FADC window start positions for individual 
# telescopes can be set using TW_MultiTelLowGainWindowStart 
TWS_LowGainWindowStart 7

# This is where VATraceWindow gets the start of the high 
# gain fadc window tracefor all telescopes for the low gain 
# channel. The FADC window start positions for individual 
# telescopes can be set using TW_MultiTelHighGainWindowStart 
TWS_HighGainWindowStart 7

# This is where VATraceWindow gets the start of the low gain 
# fadc window tracerelative to the high gain trace for all 
# telescopes for the low gain channel. The FADC window start 
# positions for individual telescopes can be set using 
# TW_MultiTelWindowStart 
TWS_LowGainWindowStartOffset 0

# Comma separated list of low gain FADC integration window 
# start positions for each telescope where1==T1, 2==T2, 
# 3==T3, 4==T4. For example, to set the start of the charge 
# window for T1 to 2 and T2 to 5 do 
# -TW_MultiTelLowGainWindowStart=1/2,2/5. This option 
# overrides-TW_LowGainWindowStart for each specified 
# telescope (if a telescope is not specified in the comma 
# separated list then its window start defaults to whatever 
# is given by TW_LowGainWindowStart). 
TWS_MultiTelLowGainWindowStart 0/7,1/7,2/7,3/7

# Comma separated list of high gain FADC integration window 
# start positions for each telescope where1==T1, 2==T2, 
# 3==T3, 4==T4. For example, to set the start of the charge 
# window for T1 to 2 and T2 to 5 do 
# -TW_MultiTelHighGainWindowStart=1/2,2/5. This option 
# overrides-TW_HighGainWindowStart for each specified 
# telescope (if a telescope is not specified in the comma 
# separated list then its window start defaults to whatever 
# is given by TW_HighGainWindowStart). 
TWS_MultiTelHighGainWindowStart 0/7,1/7,2/7,3/7

# Comma separated list of lpw gain FADC integration window 
# offset start positions for each telescope where1==T1, 
# 2==T2, 3==T3, 4==T4. For example, to set the start of the 
# charge window for T1 to 2 and T2 to 5 do 
# -TW_MultiTelLowGainWindowStartOffset=1/2,2/5. This option 
# overrides-TW_LowGainWindowStartOffset for each specified 
# telescope (if a telescope is not specified in the comma 
# separated list then its window start defaults to whatever 
# is given by TW_LowGainWindowStartOffset). 
TWS_MultiTelLowGainWindowStartOffset 0/0,1/0,2/0,3/0

# Put required BadChannelIdentifier algorithm here. Options 
# are -VABCI_Algorithm=BadChannelIdentifierNull, 
# -VABCI_Algorithm=BadChannelIdentifierDefault and 
# -VABCI_Algorithm=BadChannelIdentifierPixelStatusOverride. 
BCI_Algorithm "BadChannelIdentifierDefault"

# Put minimum allowable relative gain here 
BCI_GainMin 0.6

# Put maximum allowable relative gain here 
BCI_GainMax 1.5

# Put minimum allowable relative gain variance here 
BCI_GainVarMin 0.05

# Put maximum allowable relative gain variance here 
BCI_GainVarMax 0.4

# Put maximum allowable value of the difference between a 
# given channel's pedvar and the average pedvar in units of 
# the standard deviation of all the pedvars here 
BCI_PedVarMaxSTDEV 4

# Put minimum allowable value of the difference between a 
# given channel's pedvar and the average pedvar in units of 
# the standard deviation of all the pedvars here 
BCI_PedVarMinSTDEV -2.5

# Value of summation window to use to compute pedestal 
# variance to determine whether the channel is bad. Should 
# be [2-10] unless the default window range in stage 1 has 
# been overridden 
BCI_TraceVarWindow 5

# If you want to set or add bad channels from a user 
# specified list then pass in the filename with the list 
# using this command. The file format is two columns - the 
# first column is the telescope number (starting from one) 
# and the second column is the channel number (starting from 
# zero). 
BCI_BadChannelList ""

# If you want to use the pixel status data from another 
# file, use this option. This is useful if you are doing 
# simulations and you want to model the pixel status of the 
# array after a particular run (ie the same channels will be 
# switched off). This option must be used with 
# -BCI_Algorithm=BadChannelIdentifierPixelStatusOverride 
BCIPSO_PixelStatusDataFile ""

# Select an algorithm that decides how to specify an event 
# time. Method available are LoopClocks (default) and 
# ComparingClocks. 
VAGetTime_Algorithm "ComparingClocks"

# Select an algorithm that decides how to deal with 
# VEventOverflow data Method available are none and default 
# (default) which do nothing. 
VEventOverflow_Algorithm "default"

# Source X value in camera plane (default=0.0). Hillas 
# orientation parameters (Alpha,Distance,Miss and Azwidth) 
# are calculated relative to this value and the HPSC_YOrigin 
# value. 
HPEG2D_XOrigin 0

# Source X value in camera plane (default=0.0). Hillas 
# orientation parameters (Alpha,Distance,Miss and Azwidth) 
# are calculated relative to this value and the HPSC_YOrigin 
# value. 
HPEGMCuspXOrigin 0

# Specifies ImageChan vector filling algorithm. Possible 
# values are: -ImageChannelFiller=NullFiller: Don't fill 
# ImageChan vector. 
# -ImageChannelFiller=ImageFillerStd(default): Fill 
# fImageChan vector branch with those channels that remained 
# after cleanup. 
ImageChannelFiller "ImageFillerStd"

# Run header filling method: methods are 
# VARunHeaderFillerNull for an empty run header; 
# VARunHeaderFillerDB to fill the header from the 
# database;VARunHeaderFillerVBF to fill the run header from 
# the data file only; VASimulationRunHeaderFiller to fill 
# from a Simulation VBF file 
CRH_Algorithm "VARunHeaderFillerDB"

# [0-1] This figure tells you how much of the window to 
# placebefore the TZero position, eg a value of 0.3 puts 30% 
# of the window before the TZero 
TWTZ_Ratio 0.3

# Comma separated list of FADC integration window widths for 
# each telescope where1==T1, 2==T2, 3==T3, 4==T4. For 
# example, to set the width of the charge window for T1 to 8 
# and T2 to 9 do -TW_MultiTelLowGainWindowWidth=1/8,2/9. 
# This option overrides-TWTZ_LowGainWindowWidth for each 
# specified telescope (if a telescope is not specified in 
# the comma separated list then its window width defaults to 
# whatever is given by TWTZ_LowGainWindowWidth). 
TWTZ_MultiTelLowGainWindowWidth 0/7,1/7,2/7,3/7

# Comma separated list of FADC integration window widths for 
# each telescope where1==T1, 2==T2, 3==T3, 4==T4. For 
# example, to set the width of the charge window for T1 to 8 
# and T2 to 9 do -TW_MultiTelHighGainWindowWidth=1/8,2/9. 
# This option overrides-TWTZ_HighGainWindowWidth for each 
# specified telescope (if a telescope is not specified in 
# the comma separated list then its window width defaults to 
# whatever is given by TWTZ_HighGainWindowWidth). 
TWTZ_MultiTelHighGainWindowWidth 0/7,1/7,2/7,3/7

# In order for a particular channel to be considered in 
# calculating the average arrival time per camera, it must 
# have a certain number of entries. For short runs the 
# default may be too large, causing the algorithm to fail. 
# You can reduce the number required with this flag (eg set 
# it to 5 or 10 or whatever works. You can view the 
# histograms using the plotTZeros macro) 
TWTZ_MinEntriesPerHistogram 50

# An overflow datum should overwrite existing datum 
VEventOverflowHandlerDefault_OverwriteVEvent 1

# Discard VArrayEvent if it exists (NOT RECOMMENDED) 
VEventOverflowHandlerDefault_DiscardVArrayEvent 0

# Leave overflow datum in VEventOverflow 
VEventOverflowHandlerDefault_LeaveInOverflow 1
